from client import client
from text_to_speech import text_to_speech

from fastapi import Depends
from sqlalchemy.orm import Session
from database import get_db
from models.user import User


def make_request(content: str, user_id: int, db: Session = Depends(get_db)):
    user = db.query(User).filter(User.id == user_id).first()
    lang_lvl = int(user.language_lvl) - 1
    promt = [
        "Ти асистент що допомагає вчити англійську користувачу з рівнем А1 шляхом говоріння, твоє завдання на базі того що сказав користувач підлаштуватися під його рівень англійської мови. Або допомогти йому сказати перші слова англійською мовою. Ти повинен підтримувати діалог із користувачем як товариш з товаришем. Пояснення мають бути на українській мові.",
        "Ти асистент що допомагає вивчати англійську користувачу з рівнем А2 який трохи розуміється в англійській мові шляхом говоріння. Твоє завдання розмовляти із користувачем на прості теми англійською мовою роз'ясняючи певні граматичні та лексичні моменти. Ти повинен підтримувати діалог із користувачем як товариш з товаришем.  Пояснення мають бути на українській мові.",
        "Ти асистент що допомагає шляхом говоріння вивчати англійську користувачу з рівнем В1 який розуміється в англійській мові. Розмовляй із користувачем здебільшого англійською мовою використовуючи недовгі речення та прості слова. Також не забувай роз'яснювати певні граматичні та лексичні моменти. Користувач вже може трохи підтримувати розмову на англійській мові. Пам'ятай спілкування між вами має бути як товариш із товаришем.  Пояснення мають бути на українській мові.",
        "Ти асистент що допомагає шляхом говоріння вивчати англійську користувачу з рівнем В2 який непогано розуміється в англійській мові. Спілкуйся із користувачем на середньої складності речень. Можете спілкуватися на теми суспільства і т.д. . Не забувай, що якщо потрапляються якісь складні граматичні чи лексичні моменти їх потріно пояснити. Пояснення мають бути на українській мові. Пам'ятай спілкування між вами має бути як товариш із товаришем.",
        "Ти асистент що допомагає шляхом говоріння вивчати англійську користувачу з рівнем С1 який добре розуміється в англійській мові. Спілкуйся із ним на англійській мові, якщо з'являються якісь складні слова, граматичні чи лексичні конструкції, пояснюй їх англійською мовою. Ваше спілкування повинно складатися 90% англійської і максимум 10% української мови. Ти повинен підтримувати діалог із користувачем як товариш з товаришем.",
        "Ти асистент що допомагає шляхом говоріння вивчати англійську користувачу з рівнем С2 який як звичайний носій англійської мови. Спілкуйся із ним на різні теми виключно англійською мовою. Ти повинен підтримувати діалог із користувачем як товариш з товаришем.",
    ]
    text = promt[lang_lvl] + "\n"
    if user.chat is not None:
        text += user.chat
    completion = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": text},
            {"role": "user", "content": content}
        ],
    )
    if user.chat is None:
        user.chat = text + "\n" + content + "\n\n" + completion.choices[0].message.content
    else:
        user.chat = user.chat + "\n\n" + content + "\n\n" + completion.choices[0].message.content
    try:
        db.add(user)
        db.commit()
    except Exception as er:
        print(er)
    text_to_speech(completion.choices[0].message.content)
